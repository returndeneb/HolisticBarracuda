#pragma kernel Postprocess

// 
// Postprocessor (tensor to vertex list conversion)
//

// Input image size (defined by the model)
#define IMAGE_SIZE 64

// Iris vertex count (defined by the model)
#define IRIS_VCOUNT 5

// Contour vertex count (defined by the model)
#define CONTOUR_VCOUNT 71

// Input
StructuredBuffer<float> _IrisTensor;
StructuredBuffer<float> _ContourTensor;

// Output
RWStructuredBuffer<float4> _Vertices;

[numthreads(IRIS_VCOUNT + CONTOUR_VCOUNT, 1, 1)]
void Postprocess(uint id : SV_DispatchThreadID)
{
    if (id < IRIS_VCOUNT)
    {
        // Iris vertices
        float x =     _IrisTensor[id * 3 + 0] / IMAGE_SIZE;
        float y = 1 - _IrisTensor[id * 3 + 1] / IMAGE_SIZE;
        _Vertices[id] = float4(x, y, 0, 1);
    }
    else
    {
        // Contour vertices
        uint i = id - IRIS_VCOUNT;
        float x =     _ContourTensor[i * 3 + 0] / IMAGE_SIZE;
        float y = 1 - _ContourTensor[i * 3 + 1] / IMAGE_SIZE;
        _Vertices[IRIS_VCOUNT + i] = float4(x, y, 0, 1);
    }
}
